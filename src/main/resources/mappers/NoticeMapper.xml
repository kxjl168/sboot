<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ztgm.iot.dao.NoticeMapper" >
  <resultMap id="BaseResultMap" type="com.ztgm.iot.pojo.Notice" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="MSG" property="msg" jdbcType="VARCHAR" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="CREATER" property="creater" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, USER_ID, MSG, TITLE, STATUS, CREATE_DATE, CREATER
  </sql>
  
  
  
  
  
  <select id="noticeList" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from iot_notice
    where USER_ID = #{userid,jdbcType=VARCHAR}
  </select>
  
  
  
  
  
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from iot_notice
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from iot_notice
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ztgm.iot.pojo.Notice" >
    insert into iot_notice (ID, USER_ID, MSG, 
      TITLE, STATUS, CREATE_DATE, 
      CREATER)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{msg,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{creater,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ztgm.iot.pojo.Notice" >
    insert into iot_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="msg != null" >
        MSG,
      </if>
      <if test="title != null" >
        TITLE,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="creater != null" >
        CREATER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="msg != null" >
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ztgm.iot.pojo.Notice" >
    update iot_notice
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="msg != null" >
        MSG = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        CREATER = #{creater,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ztgm.iot.pojo.Notice" >
    update iot_notice
    set USER_ID = #{userId,jdbcType=VARCHAR},
      MSG = #{msg,jdbcType=VARCHAR},
      TITLE = #{title,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CREATER = #{creater,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>